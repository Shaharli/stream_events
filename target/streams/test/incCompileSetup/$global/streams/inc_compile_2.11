format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/shaharavigezer/Documents/Blog/Tasks/target/scala-2.11/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.11.7
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
6 items
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Users/shaharavigezer/Documents/Blog/Tasks/target/scala-2.11/test-classes/RoutesSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$1.class
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Users/shaharavigezer/Documents/Blog/Tasks/target/scala-2.11/test-classes/RoutesSpec$$anonfun$1$$anonfun$apply$mcV$sp$1.class
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Users/shaharavigezer/Documents/Blog/Tasks/target/scala-2.11/test-classes/RoutesSpec$$anonfun$1$$anonfun$apply$mcV$sp$2$$anonfun$apply$2.class
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Users/shaharavigezer/Documents/Blog/Tasks/target/scala-2.11/test-classes/RoutesSpec$$anonfun$1$$anonfun$apply$mcV$sp$2.class
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Users/shaharavigezer/Documents/Blog/Tasks/target/scala-2.11/test-classes/RoutesSpec$$anonfun$1.class
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Users/shaharavigezer/Documents/Blog/Tasks/target/scala-2.11/test-classes/RoutesSpec.class
binary dependencies:
9 items
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-actor_2.11/jars/akka-actor_2.11-2.5.12.jar
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-http-core_2.11/jars/akka-http-core_2.11-10.1.1.jar
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-http-testkit_2.11/jars/akka-http-testkit_2.11-10.1.1.jar
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-http_2.11/jars/akka-http_2.11-10.1.1.jar
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-stream_2.11/jars/akka-stream_2.11-2.5.12.jar
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Users/shaharavigezer/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Users/shaharavigezer/.ivy2/cache/org.scalactic/scalactic_2.11/bundles/scalactic_2.11-3.0.0.jar
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> /Users/shaharavigezer/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-3.0.0.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
2 items
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> EventsStatsActor$
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> EventsStatsRoutes
inheritance internal dependencies:
0 items
inheritance external dependencies:
1 items
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> EventsStatsRoutes
class names:
6 items
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RoutesSpec
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RoutesSpec$$anonfun$1
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RoutesSpec$$anonfun$1$$anonfun$apply$mcV$sp$1
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RoutesSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$1
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RoutesSpec$$anonfun$1$$anonfun$apply$mcV$sp$2
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RoutesSpec$$anonfun$1$$anonfun$apply$mcV$sp$2$$anonfun$apply$2
used names:
120 items
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> <byname>
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> <init>
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> <refinement>
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> ===
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> A
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> ActorMaterializer
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> ActorRef
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> ActorRefFactory
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> ActorSystem
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Any
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> AnyShouldWrapper
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Assertion
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> B
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> CanEqual
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Class
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> ClassTag
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> ContentTypes
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> DefaultHostInfo
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Duration
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Equality
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> EventsStatsActor
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> EventsStatsRoutes
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> ExceptionHandler
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> ExecutionContext
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> ExecutionContextExecutor
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> FromEntityUnmarshaller
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Function1
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Future
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Get
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> HttpHeader
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> HttpMethod
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> HttpProtocol
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> HttpRequest
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Int
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Matchers
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Materializer
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Nothing
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> OK
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Out
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Position
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Predef
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Prettifier
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Props
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RequestBuilder
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RequestContext
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RequestEntity
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Route
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RouteResult
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RouteTestResult
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RouteTestTimeout
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RoutesSpec
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RoutingLog
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> RoutingSettings
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> ScalatestRouteTest
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Seq
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> StatusCode
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> StatusCodes
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> String
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> StringShouldWrapper
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> StringVerbBlockRegistration
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Success
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> T
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> TildeArrow
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> TripleEqualsInvocation
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> TripleEqualsSupport
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> U
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Unit
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Unmarshaller
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> Uri
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> WithTransformation2
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> WordSpec
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> WordSpecStringWrapper
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> _$7
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> actor
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> actorOf
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> akka
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> apply
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> check
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> convertToAnyShouldWrapper
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> convertToStringShouldWrapper
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> convertToWordSpecStringWrapper
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> default
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> defaultHost
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> entityAs
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> eventsStatsRef
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> eventsStatsRoutes
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> executor
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> fromActorSystem
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> here
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> http
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> in
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> injectIntoRoute
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> materializeClassTag
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> materializer
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> model
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> org
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> package
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> props
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> req
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> scala
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> scalactic
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> scaladsl
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> scalatest
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> server
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> settings
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> should
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> source
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> status
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> stringUnmarshaller
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> subjectRegistrationFunction
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> system
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> testkit
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> unconstrainedEquality
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> unmarshalling
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> x$1
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> x$2
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> x$3
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> x$4
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> x$5
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> ~>
product stamps:
6 items
/Users/shaharavigezer/Documents/Blog/Tasks/target/scala-2.11/test-classes/RoutesSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anonfun$apply$1.class -> lastModified(1524333917000)
/Users/shaharavigezer/Documents/Blog/Tasks/target/scala-2.11/test-classes/RoutesSpec$$anonfun$1$$anonfun$apply$mcV$sp$1.class -> lastModified(1524333917000)
/Users/shaharavigezer/Documents/Blog/Tasks/target/scala-2.11/test-classes/RoutesSpec$$anonfun$1$$anonfun$apply$mcV$sp$2$$anonfun$apply$2.class -> lastModified(1524333918000)
/Users/shaharavigezer/Documents/Blog/Tasks/target/scala-2.11/test-classes/RoutesSpec$$anonfun$1$$anonfun$apply$mcV$sp$2.class -> lastModified(1524333918000)
/Users/shaharavigezer/Documents/Blog/Tasks/target/scala-2.11/test-classes/RoutesSpec$$anonfun$1.class -> lastModified(1524333917000)
/Users/shaharavigezer/Documents/Blog/Tasks/target/scala-2.11/test-classes/RoutesSpec.class -> lastModified(1524333917000)
source stamps:
1 items
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> hash(381ed13f1f252b95da79ea10f5d230a3ebbd8757)
binary stamps:
9 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1475301657000)
/Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-actor_2.11/jars/akka-actor_2.11-2.5.12.jar -> lastModified(1523600611000)
/Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-http-core_2.11/jars/akka-http-core_2.11-10.1.1.jar -> lastModified(1522653700000)
/Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-http-testkit_2.11/jars/akka-http-testkit_2.11-10.1.1.jar -> lastModified(1522653667000)
/Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-http_2.11/jars/akka-http_2.11-10.1.1.jar -> lastModified(1522653650000)
/Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-stream_2.11/jars/akka-stream_2.11-2.5.12.jar -> lastModified(1523600862000)
/Users/shaharavigezer/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> lastModified(1435004218000)
/Users/shaharavigezer/.ivy2/cache/org.scalactic/scalactic_2.11/bundles/scalactic_2.11-3.0.0.jar -> lastModified(1470060492000)
/Users/shaharavigezer/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-3.0.0.jar -> lastModified(1470060705000)
class names:
9 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.String
/Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-actor_2.11/jars/akka-actor_2.11-2.5.12.jar -> akka.actor.ActorRef$
/Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-http-core_2.11/jars/akka-http-core_2.11-10.1.1.jar -> akka.http.scaladsl.model.ContentTypes
/Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-http-testkit_2.11/jars/akka-http-testkit_2.11-10.1.1.jar -> akka.http.scaladsl.testkit.ScalatestRouteTest
/Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-http_2.11/jars/akka-http_2.11-10.1.1.jar -> akka.http.scaladsl.server.package$
/Users/shaharavigezer/.ivy2/cache/com.typesafe.akka/akka-stream_2.11/jars/akka-stream_2.11-2.5.12.jar -> akka.stream.ActorMaterializer
/Users/shaharavigezer/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> scala.concurrent.ExecutionContext
/Users/shaharavigezer/.ivy2/cache/org.scalactic/scalactic_2.11/bundles/scalactic_2.11-3.0.0.jar -> org.scalactic.source.Position
/Users/shaharavigezer/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-3.0.0.jar -> org.scalatest.Matchers
internal apis:
1 items
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> 

external apis:
2 items
EventsStatsActor$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwAzKUlQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAANzcgAgeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2hbDvUidjhXzwIAAkkABGhhc2hMAARuYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHCfiTRYdAAPZXZlbnRJbmZvRm9ybWF0c3EAfgALzeKNs3QABHNlbGZzcQB+AAsCWrQ4dAAHY29udGV4dHVxAH4ACQAAADpzcQB+AAsQDleYdAAGbm90aWZ5c3EAfgALddwRA3QAEEV2ZW50c1N0YXRzQWN0b3JzcQB+AAsxDAG9dAAHdW5hcHBseXNxAH4AC4OswLp0AAdSZWNlaXZlc3EAfgALOV6uDXQABG5hbWVzcQB+AAsOt6CgdAAEd2FpdHNxAH4AC25Azjx0ABJHZXRFdmVudHNEYXRhU3RhdHNzcQB+AAssTgg7dAAJRXZlbnRJbmZvc3EAfgAL/omEzXQAC0V2ZW50c1N0YXRzc3EAfgALjsSvxHQADmNvcHkkZGVmYXVsdCQyc3EAfgALUxMqEnQADSRhc0luc3RhbmNlT2ZzcQB+AAsEXzg8dAASR2V0RXZlbnRzVHlwZVN0YXRzc3EAfgALfEHdMHQAA21hcHNxAH4AC/kE6LR0AAxwcm9kdWN0QXJpdHlzcQB+AAuPxT9rdAAGZXF1YWxzc3EAfgAL4cMAEXQACWRhdGFDb3VudHNxAH4AC5v+CUt0AAxhc0luc3RhbmNlT2ZzcQB+AAtl3jg2dAAEZGF0YXNxAH4AC5QcOwt0AAl0eXBlQ291bnRzcQB+AAvqaYFPdAAMc3luY2hyb25pemVkc3EAfgALsL0stHQADSRpc0luc3RhbmNlT2ZzcQB+AAsY990adAAHcmVjZWl2ZXNxAH4ACz5A48J0AApwcmVSZXN0YXJ0c3EAfgALpoXKJHQADWFyb3VuZFJlY2VpdmVzcQB+AAsJi+fbdAAIY2FuRXF1YWxzcQB+AAvk2pq2dAALcG9zdFJlc3RhcnRzcQB+AAsmno+DdAAIcG9zdFN0b3BzcQB+AAuTVNmOdAANcHJvZHVjdFByZWZpeHNxAH4ACzJLtEV0AAlub3RpZnlBbGxzcQB+AAuaknMVdAARYXJvdW5kUG9zdFJlc3RhcnRzcQB+AAvg8U4QdAAMaXNJbnN0YW5jZU9mc3EAfgAL9qaoXXQAEGFyb3VuZFByZVJlc3RhcnRzcQB+AAspYsH/dAAOYXJvdW5kUG9zdFN0b3BzcQB+AAtJ3ZRvdAAGPGluaXQ+c3EAfgALBshimHQACHByZVN0YXJ0c3EAfgAL63sxB3QACXVuaGFuZGxlZHNxAH4AC4xrBMd0AAVhcHBseXNxAH4AC3vCv550AAI9PXNxAH4AC9EnWtF0AApldmVudF90eXBlc3EAfgAL3bvR83QABWNsb25lc3EAfgALMeNWpXQABiRpbml0JHNxAH4AC2z1yi90AARjb3B5c3EAfgALVL2qD3QABnNlbmRlcnNxAH4AC0qSk3Z0AAh0b1N0cmluZ3NxAH4AC/Xslxx0AAIhPXNxAH4ACy1CfGx0AAhnZXRDbGFzc3NxAH4AC3lTIPF0AA5jb3B5JGRlZmF1bHQkMXNxAH4AC4s+9Vt0AAVwcm9wc3NxAH4AC1TIf2R0AAJuZXNxAH4AC4G2Itt0ABJzdXBlcnZpc29yU3RyYXRlZ3lzcQB+AAvyABAAdAACZXFzcQB+AAuYd7EMdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgALDJJMmXQAA2xvZ3NxAH4ACxf/RkJ0AAIjI3NxAH4AC9igfg10AAhmaW5hbGl6ZXNxAH4ACzEeUlV0AA5wcm9kdWN0RWxlbWVudHNxAH4ACxyM1ud0AAhoYXNoQ29kZXNxAH4ACw7JIJN0AA5hcm91bmRQcmVTdGFydHNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAVzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AJF4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgAMeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc5fnYdwTJnuzAgABQgAFZmxhZ3N4cARxAH4AI3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgCoc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AJFMAAlpbmhlcml0ZWRxAH4AkUwAB3BhcmVudHNxAH4AkXhxAH4ArXNxAH4AqHVxAH4AjAAAAABzcQB+AKh1cQB+AIwAAAAAc3EAfgCodXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAZzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AAxMAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgCsdAAMU2VyaWFsaXphYmxlc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgCsc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADHhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgDGc3EAfgC5cQB+ALxzcQB+AL1zcQB+AMB1cQB+AMMAAAADc3EAfgDFdAAEamF2YXNxAH4AxXQAAmlvcQB+AMpzcQB+ALl0AAdQcm9kdWN0cQB+AL9zcQB+ALl0AAZFcXVh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
EventsStatsRoutes -> 

source infos:
1 items
/Users/shaharavigezer/Documents/Blog/Tasks/src/test/scala/RoutesSpec.scala -> 
AAAAAAAAAAA=
compilations:
3 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABYulaALh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASS9Vc2Vycy9zaGFoYXJhdmlnZXplci9Eb2N1bWVudHMvQmxvZy9UYXNrcy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABYulhKZJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASS9Vc2Vycy9zaGFoYXJhdmlnZXplci9Eb2N1bWVudHMvQmxvZy9UYXNrcy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
2 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABYulhm8B1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASS9Vc2Vycy9zaGFoYXJhdmlnZXplci9Eb2N1bWVudHMvQmxvZy9UYXNrcy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
